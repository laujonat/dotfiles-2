set-option -g default-shell /bin/bash
set-window-option -g mode-keys vi
set -g mode-mouse on

unbind C-b
set -g prefix `
bind-key ` send-prefix

# 0 is too far from ` ;)
set -g base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

#set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 100000

setw -g mode-keys vi
setw -g mode-mouse on
setw -g mouse-resize-pane on
setw -g mouse-select-pane on
setw -g mouse-select-window on
setw -g monitor-activity on

bind-key v split-window -h
bind-key s split-window -v
bind-key f resize-pane -Z

bind-key j resize-pane -D 5
bind-key k resize-pane -U 5
bind-key h resize-pane -L 5
bind-key l resize-pane -R 5

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window
bind -n C-p  next-window
bind -n C-n  new-window
bind -n C-v paste-buffer
# bind -n C-t  next-layout

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf

# THEME
set -g status-bg colour234
set -g status-fg colour253
set -g window-status-activity-bg colour234
set -g window-status-activity-fg colour253
set -g window-status-current-bg red
set -g window-status-separator " "
set -g status-interval 1
set -g status-left-length 0
set -g status-right-length 50
set -g visual-activity off

# border colours
set -g pane-border-fg colour240
set -g pane-border-bg colour234
set -g pane-active-border-fg colour202
set -g pane-active-border-bg colour234

# date + time
set -g status-right '#[fg=white,bg=default]%l:%M %p -- %a %m/%d/%Y'

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind -n C-f if-shell "$is_vim" "send-keys C-f" "copy-mode"

# save pane to file
bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'
